//MainWindow.xaml.cs
//Basic operation in WPF


<Window x:Class="WPF_Application_Test.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid Height="350" Width="514">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="505*" />
            <ColumnDefinition Width="9*" />
        </Grid.ColumnDefinitions>
        <Image Height="150"  HorizontalAlignment="Left" Margin="131,104,0,0" Name="image1" Stretch="Fill" VerticalAlignment="Top" Width="200" Visibility="Hidden">
           <Image.Source>
                <BitmapImage DecodePixelWidth="300" UriSource="C:\Users\abhijith.kp\Pictures\images.jpg" />
           </Image.Source> 
        </Image>
        <DockPanel Margin="0,0,257,0">
            <Image Name="Image" DockPanel.Dock="Left" />
            <TextBlock Name="Message" />
        </DockPanel>
    
        <Button Content="Show_Photo" Height="23" HorizontalAlignment="Right" Margin="0,40,387,0" Name="button1" VerticalAlignment="Top" Width="75" Click="button1_Click" />
        <TextBox Height="19" HorizontalAlignment="Left" Margin="24,0,0,265" Name="textBox1" VerticalAlignment="Bottom" Width="120" />
        <Button Content="Hide_Photo" Height="23" HorizontalAlignment="Left" Margin="354,39,0,0" Name="button2" VerticalAlignment="Top" Width="75" Click="button2_Click" />
        <TextBox Height="19" HorizontalAlignment="Left" Margin="335,66,0,0" Name="textBox2" VerticalAlignment="Top" Width="120" />
        <Menu Height="20" HorizontalAlignment="Left" Name="menu1" VerticalAlignment="Top" Width="504" Background="SteelBlue" Foreground="Black">
            <MenuItem  Header="_File" >
                <MenuItem Header="_New" Click="New_Click" Background="SteelBlue"/>
                <MenuItem Header="_Open" Click="Open_Click" Background="SteelBlue"/>
                <MenuItem Header="_Save" Background="SteelBlue"/>
                <Separator />
                <MenuItem Header="_Exit" Background="SteelBlue"/>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Manage users">
                    <MenuItem.Icon>
                        <Image Source="C:\Users\abhijith.kp\Pictures\download.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Show groups" IsCheckable="True" IsChecked="True" />
            </MenuItem>
        </Menu>
        <MediaElement Name="VidPlayer"  Width="{Binding RelativeSource={RelativeSource Self},
                                Path=Parent.ActualWidth}"
                Height="{Binding RelativeSource={RelativeSource Self},
                                Path=Parent.ActualHeight}"  Source="C:\Users\abhijith.kp\Downloads\file_example_MP4_480_1_5MG.mp4" LoadedBehavior="Manual" UnloadedBehavior="Stop" >  </MediaElement>
    </Grid>
    <Window.ContextMenu >
        <ContextMenu>
            <MenuItem Header="Show_Photo" Click="button1_Click" />
            <Separator />
            <MenuItem Header="Hide_Photo" Click="button2_Click" />
        </ContextMenu>
    </Window.ContextMenu>
    
</Window>



//cs class for the mainwindow
///implementation of button,menu,media element etc
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace WPF_Application_Test
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>

    public partial class MainWindow : Window
    {
        System.Windows.Threading.DispatcherTimer timer = new System.Windows.Threading.DispatcherTimer();
        public MainWindow()
        {
            InitializeComponent();
            VidPlayer.Play();

            timer.Tick += new EventHandler(dispatcherTimer_Tick);
            timer.Interval = new TimeSpan(0, 0, 5);
            timer.Start();
        }
        private void dispatcherTimer_Tick(object sender, EventArgs e)
        {
            VidPlayer.Close();
            timer.Stop();
            VidPlayer.Visibility = Visibility.Hidden;
        }
        private void button1_Click(object sender, RoutedEventArgs e)
        {
            textBox1.Text = "Showing photo";
            textBox2.Text = "";
            image1.Visibility = Visibility.Visible;
            System.Diagnostics.Trace.WriteLine("You clicked a button at {DateTime.Now.ToLongTimeString()}");
            if (MessageBox.Show(this,"Do you want to Save?", "Confirm",
             MessageBoxButton.YesNo, MessageBoxImage.Question) == MessageBoxResult.Yes)
            { 
            }
        }

        private void button2_Click(object sender, RoutedEventArgs e)
        {
            textBox2.Text = "Hiding photo";
            textBox1.Text = "";
            image1.Visibility = Visibility.Hidden;
        }
        private void New_Click(object sender, RoutedEventArgs e)
        {
            var ofd = new Microsoft.Win32.SaveFileDialog() { Filter = "Text files (*.txt)|*.txt|All files (*.*)|*.*" };
            var result = ofd.ShowDialog();
            if (result == false) return;
            textBox1.Text = ofd.FileName;

        }
        private void Open_Click(object sender, RoutedEventArgs e)
        {
            var ofd = new Microsoft.Win32.OpenFileDialog() { Filter = "Text files (*.txt)|*.txt|All files (*.*)|*.*" };
            var result = ofd.ShowDialog();
            if (result == false) return;
            textBox2.Text = ofd.FileName;
        }
    }
}
